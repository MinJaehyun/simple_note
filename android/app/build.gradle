plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

// note: 배포 설정 - 1: 디버깅 시, 있어도 상관없다
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "ai.mjhfactory.simple_note"
    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "ai.mjhfactory.simple_note"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    // note: 배포 설정 - 2: 디버깅 시, 있어도 상관없다
    signingConfigs {
        release {
            // 변경 후:
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    // note: 배포 설정 - 2: 디버깅 시, 있어도 상관없다
    buildTypes {
        release {
            // 디버그 사용 시:
//            signingConfig signingConfigs.debug
            // 배포 시:
            signingConfig signingConfigs.release
        }
    }

//    flavorDimensions "environment"
//    productFlavors {
//        dev {
//            dimension "environment"
//            resValue "string", "app_name", "simple.dev"
//            applicationIdSuffix ".dev"
//        }
//        local {
//            dimension "environment"
//            resValue "string", "app_name", "simple.local"
//            applicationIdSuffix ".local"
//        }
//        prod {
//            dimension "environment"
//            resValue "string", "app_name", "simple.prod"
//            applicationIdSuffix ".prod"
//        }
//    }
}


flutter {
    source '../..'
}

dependencies {}
